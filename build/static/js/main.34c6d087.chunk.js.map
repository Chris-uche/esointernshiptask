{"version":3,"sources":["App.js","endpoint.js","reportWebVitals.js","index.js"],"names":["App","useState","data","setData","loading","setLoading","error","setError","useEffect","fetch","then","res","json","response","dataStrings","map","store","catch","className","message","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oMAuDeA,MA7Cb,WAAgB,IAAD,EAEWC,mBAAS,IAFpB,mBAENC,EAFM,KAEAC,EAFA,OAGgBF,oBAAS,GAHzB,mBAGNG,EAHM,KAGEC,EAHF,OAIaJ,mBAAS,MAJtB,mBAINK,EAJM,KAICC,EAJD,KA8BX,OAvBAC,qBAAU,WACRL,EAAQ,IACRE,GAAW,GACXE,EAAS,MAETE,MCtBS,qDDuBRC,MAAK,SAACC,GAAD,OAAOA,EAAIC,UAChBF,MAAK,SAAAG,GACJR,GAAW,GAEX,IAAMS,EAAcD,EAASX,KAAKa,KAAI,qBAAEC,SACxCb,EAAQW,MAETG,OAAM,SAAAX,GACLD,GAAW,GACXE,EAASD,QAKX,IAIA,qBAAKY,UAAU,MAAf,SACA,mCACA,8CAEEd,EAAW,6CACT,4BAAIF,IAGPI,GAAS,4BAAIA,EAAMa,gBErCbC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.34c6d087.chunk.js","sourcesContent":["\nimport './App.css';\n\n\nimport React from \"react\"\nimport endpoint from './endpoint';\nimport {useEffect,useState} from \"react\";\n\n\n\n  function App() {\n\n    const [data, setData] = useState([]);\n    const [loading,setLoading] = useState(true)\n    const [error, setError] = useState(null)\n\n    \n      useEffect(()=>{\n        setData([])\n        setLoading(true)\n        setError(null)\n\n        fetch(endpoint)\n        .then((res)=>res.json())\n        .then(response=>{\n          setLoading(false)\n          //I had to desctructure the response here and return only the store values, the values are raw values not formatted\n          const dataStrings = response.data.map(({store})=> store)\n          setData(dataStrings)\n        })\n        .catch(error=>{\n          setLoading(false)\n          setError(error)\n\n        })\n       \n        \n      },[])\n\n\n      return (\n        <div className=\"App\">\n        <header>\n        <h1>Data Display</h1>\n        {\n          loading ? (<p>Loading.....</p>) : (\n            <p>{data}</p>\n          )\n        }\n        {error && <p>{error.message}</p>}\n        </header>\n      </div>\n      );\n    }\n\nexport default App;\n    \n    \n\n","const endpoint = 'https://cazadescuentos.net/api/discounts?limit=10';\r\n\r\nexport default endpoint;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}